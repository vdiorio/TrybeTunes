{"ast":null,"code":"var _jsxFileName = \"/home/felipe/Documentos/Projetos/terceiro projeto (front)/sd-015-a-project-trybetunes/src/pages/Components/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport getMusics from '../../services/musicsAPI';\nimport MusicCard from './MusicCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      album: {},\n      songs: []\n    };\n    this.findMusics = this.findMusics.bind(this);\n  }\n\n  componentDidMount() {\n    this.findMusics();\n  }\n\n  findMusics() {\n    const {\n      match\n    } = this.props;\n    const {\n      params\n    } = match;\n    const {\n      id\n    } = params;\n    getMusics(id).then(response => this.setState({\n      album: response[0],\n      songs: response.slice(1)\n    }));\n  }\n\n  render() {\n    const {\n      album,\n      songs\n    } = this.state;\n    const {\n      artistName,\n      collectionName\n    } = album;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        \"data-testid\": \"artist-name\",\n        children: artistName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"album-name\",\n        children: `${collectionName} by ${artistName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), songs.map(track => /*#__PURE__*/_jsxDEV(MusicCard, {\n        song: track\n      }, track.trackId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/felipe/Documentos/Projetos/terceiro projeto (front)/sd-015-a-project-trybetunes/src/pages/Components/Album.js"],"names":["React","PropTypes","Header","getMusics","MusicCard","Album","Component","constructor","state","album","songs","findMusics","bind","componentDidMount","match","props","params","id","then","response","setState","slice","render","artistName","collectionName","map","track","trackId","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,KAAK,EAAE;AAFI,KAAb;AAKA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAG;AACX,UAAM;AAAEG,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAaF,KAAnB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAASD,MAAf;AAEAb,IAAAA,SAAS,CAACc,EAAD,CAAT,CAAcC,IAAd,CAAoBC,QAAD,IAAc,KAAKC,QAAL,CAAc;AAC7CX,MAAAA,KAAK,EAAEU,QAAQ,CAAC,CAAD,CAD8B;AAE7CT,MAAAA,KAAK,EAAES,QAAQ,CAACE,KAAT,CAAe,CAAf;AAFsC,KAAd,CAAjC;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEb,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAmB,KAAKF,KAA9B;AACA,UAAM;AAAEe,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAAiCf,KAAvC;AACA,wBACE;AAAK,qBAAY,YAAjB;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AACE,uBAAY,aADd;AAAA,kBAGGc;AAHH;AAAA;AAAA;AAAA;AAAA,cAHF,eASE;AACE,uBAAY,YADd;AAAA,kBAGI,GAAEC,cAAe,OAAMD,UAAW;AAHtC;AAAA;AAAA;AAAA;AAAA,cATF,EAeGb,KAAK,CAACe,GAAN,CAAWC,KAAD,iBACT,QAAC,SAAD;AAEE,QAAA,IAAI,EAAGA;AAFT,SACQA,KAAK,CAACC,OADd;AAAA;AAAA;AAAA;AAAA,cADD,CAfH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAvDiC;;AA0DpCtB,KAAK,CAACuB,SAAN,GAAkB;AAChBd,EAAAA,KAAK,EAAEb,SAAS,CAAC4B,KAAV,CAAgB;AACrBb,IAAAA,MAAM,EAAEf,SAAS,CAAC4B,KAAV,CAAgB;AACtBZ,MAAAA,EAAE,EAAEhB,SAAS,CAAC6B;AADQ,KAAhB;AADa,GAAhB,EAIJC;AALa,CAAlB;AAQA,eAAe1B,KAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport getMusics from '../../services/musicsAPI';\nimport MusicCard from './MusicCard';\n\nclass Album extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      album: {},\n      songs: [],\n    };\n\n    this.findMusics = this.findMusics.bind(this);\n  }\n\n  componentDidMount() {\n    this.findMusics();\n  }\n\n  findMusics() {\n    const { match } = this.props;\n    const { params } = match;\n    const { id } = params;\n\n    getMusics(id).then((response) => this.setState({\n      album: response[0],\n      songs: response.slice(1),\n    }));\n  }\n\n  render() {\n    const { album, songs } = this.state;\n    const { artistName, collectionName } = album;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n\n        <h3\n          data-testid=\"artist-name\"\n        >\n          {artistName}\n\n        </h3>\n        <p\n          data-testid=\"album-name\"\n        >\n          {`${collectionName} by ${artistName}`}\n\n        </p>\n        {songs.map((track) => (\n          <MusicCard\n            key={ track.trackId }\n            song={ track }\n\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n\n};\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}