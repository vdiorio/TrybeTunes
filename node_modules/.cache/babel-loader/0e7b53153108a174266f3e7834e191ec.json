{"ast":null,"code":"var _jsxFileName = \"/home/felipe/Documentos/Projetos/terceiro projeto (front)/sd-015-a-project-trybetunes/src/pages/Components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs, removeSong } from '../../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      checked: false\n    };\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.loadFavoriteSongs = this.loadFavoriteSongs.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFavoriteSongs();\n  }\n\n  handleCheckBox() {\n    const {\n      song\n    } = this.props;\n    const {\n      checked\n    } = this.state;\n    this.setState({\n      loading: true\n    });\n\n    if (checked) {\n      removeSong(song).then(() => this.setState({\n        loading: false,\n        checked: false\n      }));\n    } else {\n      addSong(song).then(() => this.setState({\n        loading: false,\n        checked: true\n      }));\n    }\n  }\n\n  loadFavoriteSongs() {\n    const {\n      song\n    } = this.props;\n    const {\n      trackId\n    } = song;\n    getFavoriteSongs().then(response => {\n      response.forEach(array => {\n        if (array.trackId === trackId) {\n          this.setState({\n            checked: true\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    const {\n      song\n    } = this.props;\n    const {\n      trackName,\n      previewUrl,\n      trackId\n    } = song;\n    const {\n      loading,\n      checked\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: trackName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          \"data-testid\": \"audio-component\",\n          src: previewUrl,\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"track\", {\n            kind: \"captions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: trackId,\n          children: [\"Favorita\", /*#__PURE__*/_jsxDEV(\"input\", {\n            \"data-testid\": `checkbox-music-${trackId}`,\n            type: \"checkbox\",\n            id: trackId,\n            onChange: this.handleCheckBox,\n            checked: checked\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  song: PropTypes.shape({\n    wraperType: PropTypes.string,\n    kind: PropTypes.string,\n    artistId: PropTypes.number,\n    artistName: PropTypes.string,\n    artistViewUrl: PropTypes.string,\n    artworkUrl30: PropTypes.string,\n    artworkUrl60: PropTypes.string,\n    artworkUrl100: PropTypes.string,\n    collectionCensoredName: PropTypes.string,\n    collectionExplicitness: PropTypes.string,\n    collectionId: PropTypes.number,\n    collectionName: PropTypes.string,\n    collectionPrice: PropTypes.number,\n    collectionViewUrl: PropTypes.string,\n    country: PropTypes.string,\n    currency: PropTypes.string,\n    discCount: PropTypes.number,\n    discNumber: PropTypes.number,\n    isStreamable: PropTypes.bool,\n    previewUrl: PropTypes.string,\n    primaryGenreName: PropTypes.string,\n    releaseDate: PropTypes.string,\n    trackCensoredName: PropTypes.string,\n    trackCount: PropTypes.number,\n    trackExplicitness: PropTypes.string,\n    trackId: PropTypes.number,\n    trackName: PropTypes.string,\n    trackNumber: PropTypes.number,\n    trackPrice: PropTypes.number,\n    trackTimeMillis: PropTypes.number,\n    trackViewUrl: PropTypes.string\n  }).isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/felipe/Documentos/Projetos/terceiro projeto (front)/sd-015-a-project-trybetunes/src/pages/Components/MusicCard.js"],"names":["React","PropTypes","addSong","getFavoriteSongs","removeSong","Loading","MusicCard","Component","constructor","state","loading","checked","handleCheckBox","bind","loadFavoriteSongs","componentDidMount","song","props","setState","then","trackId","response","forEach","array","render","trackName","previewUrl","propTypes","shape","wraperType","string","kind","artistId","number","artistName","artistViewUrl","artworkUrl30","artworkUrl60","artworkUrl100","collectionCensoredName","collectionExplicitness","collectionId","collectionName","collectionPrice","collectionViewUrl","country","currency","discCount","discNumber","isStreamable","bool","primaryGenreName","releaseDate","trackCensoredName","trackCount","trackExplicitness","trackNumber","trackPrice","trackTimeMillis","trackViewUrl","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, getFavoriteSongs, removeSong } from '../../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      checked: false,\n    };\n    this.handleCheckBox = this.handleCheckBox.bind(this);\n    this.loadFavoriteSongs = this.loadFavoriteSongs.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadFavoriteSongs();\n  }\n\n  handleCheckBox() {\n    const { song } = this.props;\n    const { checked } = this.state;\n\n    this.setState({\n      loading: true,\n    });\n    if (checked) {\n      removeSong(song)\n        .then(() => this.setState({\n          loading: false,\n          checked: false,\n        }));\n    } else {\n      addSong(song)\n        .then(() => this.setState({\n          loading: false,\n          checked: true,\n        }));\n    }\n  }\n\n  loadFavoriteSongs() {\n    const { song } = this.props;\n    const { trackId } = song;\n    getFavoriteSongs().then((response) => {\n      response.forEach((array) => {\n        if (array.trackId === trackId) {\n          this.setState({\n            checked: true,\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    const { song } = this.props;\n    const { trackName, previewUrl, trackId } = song;\n    const { loading, checked } = this.state;\n    return (\n      <div>\n        {loading ? (\n          <Loading />\n        ) : (\n          <div>\n            <p>{trackName}</p>\n            <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n              <track kind=\"captions\" />\n              O seu navegador não suporta o elemento\n              {' '}\n              <code>audio</code>\n              .\n            </audio>\n            <label htmlFor={ trackId }>\n              Favorita\n              <input\n                data-testid={ `checkbox-music-${trackId}` }\n                type=\"checkbox\"\n                id={ trackId }\n                onChange={ this.handleCheckBox }\n                checked={ checked }\n              />\n            </label>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  song: PropTypes.shape({\n    wraperType: PropTypes.string,\n    kind: PropTypes.string,\n    artistId: PropTypes.number,\n    artistName: PropTypes.string,\n    artistViewUrl: PropTypes.string,\n    artworkUrl30: PropTypes.string,\n    artworkUrl60: PropTypes.string,\n    artworkUrl100: PropTypes.string,\n    collectionCensoredName: PropTypes.string,\n    collectionExplicitness: PropTypes.string,\n    collectionId: PropTypes.number,\n    collectionName: PropTypes.string,\n    collectionPrice: PropTypes.number,\n    collectionViewUrl: PropTypes.string,\n    country: PropTypes.string,\n    currency: PropTypes.string,\n    discCount: PropTypes.number,\n    discNumber: PropTypes.number,\n    isStreamable: PropTypes.bool,\n    previewUrl: PropTypes.string,\n    primaryGenreName: PropTypes.string,\n    releaseDate: PropTypes.string,\n    trackCensoredName: PropTypes.string,\n    trackCount: PropTypes.number,\n    trackExplicitness: PropTypes.string,\n    trackId: PropTypes.number,\n    trackName: PropTypes.string,\n    trackNumber: PropTypes.number,\n    trackPrice: PropTypes.number,\n    trackTimeMillis: PropTypes.number,\n    trackViewUrl: PropTypes.string,\n  }).isRequired,\n};\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}